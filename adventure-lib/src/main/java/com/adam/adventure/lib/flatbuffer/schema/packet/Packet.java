// automatically generated by the FlatBuffers compiler, do not modify

package com.adam.adventure.lib.flatbuffer.schema.packet;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Packet extends Table {
  public static Packet getRootAsPacket(ByteBuffer _bb) { return getRootAsPacket(_bb, new Packet()); }
  public static Packet getRootAsPacket(ByteBuffer _bb, Packet obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Packet __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte packetType() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table packet(Table obj) { int o = __offset(6); return o != 0 ? __union(obj, o) : null; }

  public static int createPacket(FlatBufferBuilder builder,
      byte packet_type,
      int packetOffset) {
    builder.startObject(2);
    Packet.addPacket(builder, packetOffset);
    Packet.addPacketType(builder, packet_type);
    return Packet.endPacket(builder);
  }

  public static void startPacket(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addPacketType(FlatBufferBuilder builder, byte packetType) { builder.addByte(0, packetType, 0); }
  public static void addPacket(FlatBufferBuilder builder, int packetOffset) { builder.addOffset(1, packetOffset, 0); }
  public static int endPacket(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

