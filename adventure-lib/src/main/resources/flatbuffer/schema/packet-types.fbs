namespace com.adam.adventure.lib.flatbuffer.schema.packet;

union PacketType { WorldStatePacket, LoginPacket, LoginSuccessfulPacket, ClientReadyPacket, EntityTransformPacket, ServerCommandPacket }

struct Matrix4f {
    m00:float;
    m01:float;
    m02:float;
    m03:float;

    m10:float;
    m11:float;
    m12:float;
    m13:float;

    m20:float;
    m21:float;
    m22:float;
    m23:float;

    m30:float;
    m31:float;
    m32:float;
    m33:float;
}


table Map {
    entries:[MapEntry];
}

table MapEntry {
    key:string;
    value:string;
}

enum EntityType:byte { STANDARD, PLAYER, TILEMAP }

table EntityInfo {
    id:string;
    name:string;
    animationName:string;
    transform:Matrix4f;
    type:EntityType;
    attributes:Map;
}

table SceneInfo {
    sceneName:string;
    entities:[EntityInfo];
}


//Sent by the server to indicate the state of the world
table WorldStatePacket {
    activeScene:SceneInfo;
}

//Sent by the client to indicate they'd like to login to the server
table LoginPacket {
    playerUsername:string;
}

//Returned by the server to state player information
table LoginSuccessfulPacket {
    playerEntity:EntityInfo;
    tickrate:long;
}

//Sent by the client to say it is now ready to start receiving regular updates from the server
table ClientReadyPacket {
    playerEntity:EntityInfo;
}

//Sent by the client to indicate an entity transform
table EntityTransformPacket {
    entityId:string;
    transform:Matrix4f;
}

table ServerCommandPacket {
    command:string;
}

table Packet {
    packet:PacketType;
    packetId:long;
    packetTimestamp:long;
}

table PacketBatch {
    packets:[Packet];
}
